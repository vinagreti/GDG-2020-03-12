{"version":3,"file":"foo-counter.js","sources":["ng://foo-counter/lib/foo-counter.component.html","ng://foo-counter/lib/foo-counter.component.ts","ng://foo-counter/lib/foo-counter.module.ts","ng://foo-counter/public-api.ts","ng://foo-counter/foo-counter.ts"],"sourcesContent":["<ng-container [ngSwitch]=\"(counter$ | async) ? true : false\">\n  <form *ngSwitchCase=\"true\" (submit)=\"stop()\">\n    <h2>{{ counter$ | async }}s</h2>\n    <button type=\"submit\">Parar</button>\n  </form>\n\n  <form *ngSwitchCase=\"false\" (submit)=\"start()\">\n    <h2>{{ lastTotal }}s</h2>\n    <button type=\"submit\">Contar</button>\n  </form>\n</ng-container>\n","import { Component } from '@angular/core';\nimport { BehaviorSubject, interval, Observable, Subject } from 'rxjs';\nimport { map, takeUntil, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'foo-counter',\n  templateUrl: './foo-counter.component.html',\n})\nexport class FooCounterComponent {\n  interval = 100;\n\n  counter$: Observable<number>;\n\n  lastTotal = 0;\n\n  private endSchedule$ = new Subject();\n\n  private total$ = new BehaviorSubject<number>(0);\n\n  constructor() {}\n\n  start() {\n    this.total$.next(0);\n    this.counter$ = interval(this.interval).pipe(\n      tap(() => this.incrementTotal()),\n      map(() => this.getTotalSeconds()),\n      takeUntil(this.endSchedule$)\n    );\n  }\n\n  stop() {\n    this.lastTotal = this.getTotalSeconds();\n    this.endSchedule$.next();\n    this.counter$ = undefined;\n  }\n\n  private incrementTotal() {\n    const total = this.total$.value + this.interval;\n    this.total$.next(total);\n  }\n\n  private getTotalSeconds() {\n    return this.total$.value / 1000;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { FooCounterComponent } from './foo-counter.component';\n\n@NgModule({\n  declarations: [FooCounterComponent],\n  exports: [FooCounterComponent],\n  imports: [CommonModule, FormsModule],\n})\nexport class FooCounterModule {}\n","/*\n * Public API Surface of foo-counter\n */\n\nexport * from './lib/foo-counter.component';\nexport * from './lib/foo-counter.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","i0.ɵɵelementContainerStart","i0.ɵɵtemplate","i0.ɵɵelementContainerEnd","i0.ɵɵproperty"],"mappings":";;;;;;;;IACEA,4BACE;IADyBC,yKAAiB;IAC1CD,uBAAI;IAAAE,SAAuB;;IAAAC,cAAK;IAChCH,8BAAsB;IAAAE,kBAAK;IAAAC,cAAS;IACtCA,cAAO;;;IAFDC,YAAuB;IAAvBC,+DAAuB;;;;IAI7BL,4BACE;IAD0BC,0KAAkB;IAC5CD,uBAAI;IAAAE,SAAgB;IAAAC,cAAK;IACzBH,8BAAsB;IAAAE,mBAAM;IAAAC,cAAS;IACvCA,cAAO;;;IAFDC,YAAgB;IAAhBC,6CAAgB;;MCCX,mBAAmB;IAW9B;QAVA,aAAQ,GAAG,GAAG,CAAC;QAIf,cAAS,GAAG,CAAC,CAAC;QAEN,iBAAY,GAAG,IAAI,OAAO,EAAE,CAAC;QAE7B,WAAM,GAAG,IAAI,eAAe,CAAS,CAAC,CAAC,CAAC;KAEhC;IAEhB,KAAK;QACH,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACpB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC1C,GAAG,CAAC,MAAM,IAAI,CAAC,cAAc,EAAE,CAAC,EAChC,GAAG,CAAC,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC,EACjC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAC7B,CAAC;KACH;IAED,IAAI;QACF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACxC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;QACzB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;KAC3B;IAEO,cAAc;QACpB,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;QAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACzB;IAEO,eAAe;QACrB,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;KACjC;;sFAnCU,mBAAmB;qDAAnB,mBAAmB;QDRhCC,6BACE;;QAAAC,mEACE;QAIFA,mEACE;QAGJC,uBAAe;;QAVDC,sEAA8C;QACpDL,YAAoB;QAApBK,gCAAoB;QAKpBL,YAAqB;QAArBK,iCAAqB;;+CCEhB,mBAAmB;cAJ/B,SAAS;eAAC;gBACT,QAAQ,EAAE,aAAa;gBACvB,WAAW,EAAE,8BAA8B;aAC5C;;;MCGY,gBAAgB;;iDAAhB,gBAAgB;4GAAhB,gBAAgB,kBAFlB,CAAC,YAAY,EAAE,WAAW,CAAC;qFAEzB,gBAAgB,mBAJZ,mBAAmB,aAExB,YAAY,EAAE,WAAW,aADzB,mBAAmB;+CAGlB,gBAAgB;cAL5B,QAAQ;eAAC;gBACR,YAAY,EAAE,CAAC,mBAAmB,CAAC;gBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;gBAC9B,OAAO,EAAE,CAAC,YAAY,EAAE,WAAW,CAAC;aACrC;;;ACTD;;GAEG;;ACFH;;GAEG;;;;"}