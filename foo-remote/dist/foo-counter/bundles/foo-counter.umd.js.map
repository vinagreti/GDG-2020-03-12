{"version":3,"file":"foo-counter.umd.js","sources":["ng://foo-counter/lib/foo-counter.component.html","ng://foo-counter/lib/foo-counter.component.ts","ng://foo-counter/lib/foo-counter.module.ts"],"sourcesContent":["<ng-container [ngSwitch]=\"(counter$ | async) ? true : false\">\n  <form *ngSwitchCase=\"true\" (submit)=\"stop()\">\n    <h2>{{ counter$ | async }}s</h2>\n    <button type=\"submit\">Parar</button>\n  </form>\n\n  <form *ngSwitchCase=\"false\" (submit)=\"start()\">\n    <h2>{{ lastTotal }}s</h2>\n    <button type=\"submit\">Contar</button>\n  </form>\n</ng-container>\n","import { Component } from '@angular/core';\nimport { BehaviorSubject, interval, Observable, Subject } from 'rxjs';\nimport { map, takeUntil, tap } from 'rxjs/operators';\n\n@Component({\n  selector: 'foo-counter',\n  templateUrl: './foo-counter.component.html',\n})\nexport class FooCounterComponent {\n  interval = 100;\n\n  counter$: Observable<number>;\n\n  lastTotal = 0;\n\n  private endSchedule$ = new Subject();\n\n  private total$ = new BehaviorSubject<number>(0);\n\n  constructor() {}\n\n  start() {\n    this.total$.next(0);\n    this.counter$ = interval(this.interval).pipe(\n      tap(() => this.incrementTotal()),\n      map(() => this.getTotalSeconds()),\n      takeUntil(this.endSchedule$)\n    );\n  }\n\n  stop() {\n    this.lastTotal = this.getTotalSeconds();\n    this.endSchedule$.next();\n    this.counter$ = undefined;\n  }\n\n  private incrementTotal() {\n    const total = this.total$.value + this.interval;\n    this.total$.next(total);\n  }\n\n  private getTotalSeconds() {\n    return this.total$.value / 1000;\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { FooCounterComponent } from './foo-counter.component';\n\n@NgModule({\n  declarations: [FooCounterComponent],\n  exports: [FooCounterComponent],\n  imports: [CommonModule, FormsModule],\n})\nexport class FooCounterModule {}\n"],"names":["i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate1","Subject","BehaviorSubject","interval","tap","map","takeUntil","i0.ɵɵelementContainerStart","i0.ɵɵtemplate","i0.ɵɵelementContainerEnd","i0.ɵɵproperty","Component","CommonModule","FormsModule","NgModule"],"mappings":";;;;;;;;QACEA,oCACE;QADyBC,+LAAiB;QAC1CD,+BAAI;QAAAE,iBAAuB;;QAAAC,sBAAK;QAChCH,sCAAsB;QAAAE,0BAAK;QAAAC,sBAAS;QACtCA,sBAAO;;;QAFDC,oBAAuB;QAAvBC,+EAAuB;;;;QAI7BL,oCACE;QAD0BC,mMAAkB;QAC5CD,+BAAI;QAAAE,iBAAgB;QAAAC,sBAAK;QACzBH,sCAAsB;QAAAE,2BAAM;QAAAC,sBAAS;QACvCA,sBAAO;;;QAFDC,oBAAgB;QAAhBC,qDAAgB;;;QCYtB;YAVA,aAAQ,GAAG,GAAG,CAAC;YAIf,cAAS,GAAG,CAAC,CAAC;YAEN,iBAAY,GAAG,IAAIC,YAAO,EAAE,CAAC;YAE7B,WAAM,GAAG,IAAIC,oBAAe,CAAS,CAAC,CAAC,CAAC;SAEhC;QAEhB,mCAAK,GAAL;YAAA,iBAOC;YANC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YACpB,IAAI,CAAC,QAAQ,GAAGC,aAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,IAAI,CAC1CC,aAAG,CAAC,cAAM,OAAA,KAAI,CAAC,cAAc,EAAE,GAAA,CAAC,EAChCC,aAAG,CAAC,cAAM,OAAA,KAAI,CAAC,eAAe,EAAE,GAAA,CAAC,EACjCC,mBAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAC7B,CAAC;SACH;QAED,kCAAI,GAAJ;YACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;YACxC,IAAI,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC;YACzB,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;SAC3B;QAEO,4CAAc,GAAtB;YACE,IAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,QAAQ,CAAC;YAChD,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;SACzB;QAEO,6CAAe,GAAvB;YACE,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;SACjC;8FAnCU,mBAAmB;qEAAnB,mBAAmB;gBDRhCC,qCACE;;gBAAAC,2EACE;gBAIFA,2EACE;gBAGJC,+BAAe;;gBAVDC,sFAA8C;gBACpDX,oBAAoB;gBAApBW,wCAAoB;gBAKpBX,oBAAqB;gBAArBW,yCAAqB;;kCCN7B;KAIA,IAwCC;2DApCY,mBAAmB;kBAJ/BC,cAAS;mBAAC;oBACT,QAAQ,EAAE,aAAa;oBACvB,WAAW,EAAE,8BAA8B;iBAC5C;;;;QCFD;SAKgC;iEAAnB,gBAAgB;4HAAhB,gBAAgB,kBAFlB,CAACC,mBAAY,EAAEC,iBAAW,CAAC;+BARtC;KAKA,IAKgC;iGAAnB,gBAAgB,mBAJZ,mBAAmB,aAExBD,mBAAY,EAAEC,iBAAW,aADzB,mBAAmB;2DAGlB,gBAAgB;kBAL5BC,aAAQ;mBAAC;oBACR,YAAY,EAAE,CAAC,mBAAmB,CAAC;oBACnC,OAAO,EAAE,CAAC,mBAAmB,CAAC;oBAC9B,OAAO,EAAE,CAACF,mBAAY,EAAEC,iBAAW,CAAC;iBACrC;;;;;;;;;;;;;;"}